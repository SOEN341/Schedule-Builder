<?php
 require_once('Time.php');
	require_once('Course.php');
class Schedule
    {

   
    public $courses = Array(); //courses that were added successfully
    public $priority = Array(); ///array of hardcoded  priority courses
    public $arrayOfTimes;
    public $semester = ''; //semester
    public $courseload = '';
    public $coursesNeeded = Array(); //list of  courses that the user has
    public $coursesTaken = Array(); //list of courses that the user has taken
    public $prefTime = '';
    public $dayOff = '';
    public $schedule = Array();
    
    
    
    function __construct($coursesNeeded, $coursesTaken, $courseload, $prefTime, $dayOff, $priority)
        {
        $this->coursesTaken  = $coursesTaken;
        $this->coursesNeeded = $coursesNeeded;
        $this->courseload    = $courseload;
        $this->prefTime      = $prefTime;
        $this->dayOff        = $dayOff;
        $this->priority      = $priority;
        $this->arrayOfTimes= Array();
        
        
        function myfunction($a, $b)
            {
            if ($a === $b)
                {
                return 0;
                }
            return ($a > $b) ? 1 : -1;
            }
        
        //$this->courses=array_udiff($priority,$coursesTaken,"myfunction"); //remove the courses that were taken by the user from the priority. 
        $this->courses = array_intersect(array_udiff($priority, $coursesTaken, "myfunction"), $coursesNeeded);
        
        }
    
    // tries to add a course to the sechdule, returns true if added properly or false if one of the section cannot possibly be added
    function addCourse($Course)
        {
        
        $Lecture  = $Course->lectures;
        $Tutorial = $Course->tutorials;
        $Lab      = $Course->labs;
        $test     = array();
        $time     = array();
        $addTo    = array();
        $YesOrNo  = true;
        
        foreach ($Lecture as $key => $value)
            {
            	//var_dump($value);
            	//echo strlen($value);
            	if (strlen($value) ==212) //sectionts that matched the right format
            array_push($test,json_decode($value, true));
            }

           // var_dump($test);
        
        foreach ($test as $key => $value)
            {
          // var_dump($value);	
           $temp = new Time($value['dayOffered'], $value['beginTime'], $value['endTime']);
           array_push($time, $temp);
            }

           // var_dump($time);
           // var_dump($this->arrayOfTimes);
        
        foreach ($time as $key => $value)
            {
            foreach ($this->arrayOfTimes as $key => $setTimes)
                {
                	//var_dump($setTimes);
                if ($value->CompareTo($setTimes['0']->Day, $setTimes['0']->StartTime, $setTimes['0']->EndTime) == false)
                    {
                    $YesOrNo = false;
					var_dump("false");
                    }
                 }
            
            if ($YesOrNo == true)
                {
                array_push($addTo, $value);
                }
            $YesOrNo == true;
            }
        
        
        foreach ($Lecture as $key => $value)
            {
            $test = json_decode($value, true);
            //echo $test['type'];
            //var_dump($test);
            }
            for ($i = 0; $i < 1; $i++)
                {
                if ($addTo != null)
                    {
                    array_push($this->arrayOfTimes, $addTo);
                    }
                
                }

                 //-----------------------------       
        }

                      
    }
?>